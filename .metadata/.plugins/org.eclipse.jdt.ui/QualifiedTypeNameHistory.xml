<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.data.neo4j.repository.GraphRepository"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="java.util.Objects"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.infogain.entity.RecommendEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="com.infogain.exceptions.MovieNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.infogain.requests.LikeRequest"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Import"/>
<fullyQualifiedTypeName name="com.infogain.clients.UserClient"/>
<fullyQualifiedTypeName name="com.infogain.clients.RecommendationClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.infogain.fallbacks.RecommendationClientHystrixFallback"/>
<fullyQualifiedTypeName name="com.infogain.clients.MovieClient"/>
<fullyQualifiedTypeName name="com.infogain.fallbacks.MovieClientHystrixFallback"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
<fullyQualifiedTypeName name="com.infogain.entity.UserEntity"/>
<fullyQualifiedTypeName name="com.infogain.repository.UserRepository"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="com.infogain.exception.UserNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonInclude"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonInclude.Include"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="com.infogain.repository.MovieRepository"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.infogain.service.IMovieService"/>
<fullyQualifiedTypeName name="org.mockito.Mock"/>
<fullyQualifiedTypeName name="org.mockito.junit.MockitoJUnitRunner"/>
<fullyQualifiedTypeName name="org.mockito.runners.MockitoJUnitRunner"/>
<fullyQualifiedTypeName name="org.mockito.Mockito"/>
<fullyQualifiedTypeName name="com.infogain.dto.MovieDTO"/>
<fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
</qualifiedTypeNameHistroy>
